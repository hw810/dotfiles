
;; package manager
(setq package-archives '(("gnu" . "http://elpa.gnu.org/packages/")
       	                 ("marmalade" . "http://marmalade-repo.org/packages/")
                         ("melpa" . "http://melpa.milkbox.net/packages/")))


;; org mode
(add-hook 'org-mode-hook 'turn-on-visual-line-mode) ; turn on 'wrap'
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(custom-safe-themes (quote ("a27c00821ccfd5a78b01e4f35dc056706dd9ede09a8b90c6955ae6a390eb1c1e" default)))
 '(inhibit-startup-screen t)
 '(org-agenda-files (quote ("~/Dropbox/Org/English.org" "~/Dropbox/Org/Journal.org" "~/Dropbox/Org/Todo.org" "~/Dropbox/Org/inbox.org")))
 '(org-startup-indented t)
 '(show-paren-mode t)
 '(tool-bar-mode nil))
(global-set-key "\C-ca" 'org-agenda)  ;agenda command

;set up capture
(setq org-directory "~/Dropbox/Org")
(define-key global-map "\C-cc" 'org-capture)
(setq org-capture-templates 
       '(("t" "Todo" entry (file+headline (concat org-directory "/Todo.org") "Tasks")
           "* TODO %?\n  Entered on %U\n  %i\n %a") 
         ("j" "Journal" entry (file+datetree (concat org-directory "/Journal.org"))
           "* %?\nEntered on %U\n %\i\n")
         ("e" "English" entry (file+headline (concat org-directory "/English.org") "English")
           "* %?\n  Entered on %U\n %i\n")))

;; end: org mode

(org-babel-do-load-languages 'org-babel-load-languages '((python . t)))
(setq org-src-fontify-natively t)

(package-initialize)
(windmove-default-keybindings)
(sml/setup)


;; turn on line number for every buffer 
(global-linum-mode 1)

;; turn on winner mode which will remember windows/buffer setting
(winner-mode)

;; window move default key bind
(windmove-default-keybindings)

;; Make windmove work in org-mode:
(add-hook 'org-shiftup-final-hook 'windmove-up)
(add-hook 'org-shiftleft-final-hook 'windmove-left)
(add-hook 'org-shiftdown-final-hook 'windmove-down)
(add-hook 'org-shiftright-final-hook 'windmove-right)

;; turn off alarm bell in isearch and C-g
(setq ring-bell-function 
      (lambda ()
	(unless (memq this-command
		      '(isearch-abort abort-recursive-edit exit-minibuffer keyboard-quit))
	  (ding))))

;; add new line when at the buttom and hit C-n
(setq next-line-add-newlines t)

;; enable Ido mode
(setq ido-enable-flex-matching t)
(setq ido-everywhere t)
(ido-mode 1)


;; enbble search recent files
(require 'recentf)
;get rid of 'find-file-read-only' and replace it with something more useful.
(global-set-key (kbd "C-x C-r") 'ido-recentf-open)
(recentf-mode t)  ; enable recent files mode.
(setq recentf-max-saved-items 50)  ; 50 files ought to be enough.
(defun ido-recentf-open ()
  "Use `ido-completing-read' to \\[find-file] a recent file"
  (interactive)
  (if (find-file (ido-completing-read "Find recent file: " recentf-list))
      (message "Opening file...")
    (message "Aborting")))


;; enable .bashrc setting in shell command invoked by M-!
(setq shell-file-name "bash")
(setq shell-command-switch "-ic")
(put 'set-goal-column 'disabled nil)

;; disable alert when turn on goal-column
;(put 'set-goal-column 'disabled nil)

;; enable Octave mode for .m file
(autoload 'octave-mode "octave-mod" nil t)
(setq auto-mode-alist
      (cons '("\\.m$" . octave-mode) auto-mode-alist))

(add-to-list 'custom-theme-load-path "~/.emacs.d/custom-theme-directory/")
(load-theme 'gruvbox t)

;; parenthesis indication
(show-paren-mode 1)
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )

;; install only when needed
(defun install-if-needed (package)
  (unless (package-installed-p package)
    (package-install package)))

;; set up auto-complete for lisp mode
(install-if-needed 'auto-complete)
(require 'auto-complete-config)
(add-to-list 'ac-dictionary-directories "~/.emacs.d/dict")
(ac-config-default)

;; python ide setup

;; when first package can Not be found, enable the following line
;; (package-refresh-contents)


(setq to-install
      '(python-mode magit yasnippet jedi auto-complete autopair find-file-in-repository flycheck))

(mapc 'install-if-needed to-install)

(require 'magit)
(setq magit-last-seen-setup-instructions "1.4.0")
(global-set-key "\C-xg" 'magit-status)


(require 'auto-complete)
(require 'autopair)
(require 'yasnippet)
(require 'flycheck)
(global-flycheck-mode t)

(global-set-key [f7] 'find-file-in-repository)

; auto-complete mode extra settings
(setq
 ac-auto-start 2
 ac-override-local-map nil
 ac-use-menu-map t
 ac-candidate-limit 20)

;; ;; Python mode settings
(require 'python-mode)
(add-to-list 'auto-mode-alist '("\\.py$" . python-mode))
(setq py-electric-colon-active t)
(add-hook 'python-mode-hook 'autopair-mode)
(add-hook 'python-mode-hook 'yas-minor-mode)

;; ;; Jedi settings
(require 'jedi)
;; It's also required to run "pip install --user jedi" and "pip
;; install --user epc" to get the Python side of the library work
;; correctly.
;; With the same interpreter you're using.

;; if you need to change your python intepreter, if you want to change it
;; (setq jedi:server-command
;;       '("python2" "/home/andrea/.emacs.d/elpa/jedi-0.1.2/jediepcserver.py"))

(add-hook 'python-mode-hook
	  (lambda ()
	    (jedi:setup)
	    (jedi:ac-setup)
            (local-set-key "\C-cd" 'jedi:show-doc)
            (local-set-key (kbd "M-SPC") 'jedi:complete)
            (local-set-key (kbd "M-.") 'jedi:goto-definition)))


(add-hook 'python-mode-hook 'auto-complete-mode)

;; python ide setup ends
